#!/usr/bin/env bash

# static-site-generator.sh - Example of using myst.sh as an embedded utility
# This demonstrates how myst.sh can be integrated into other applications

set -euo pipefail

SCRIPT_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

# Source myst.sh as a library
source "${SCRIPT_DIR}/../myst.sh"

# Configuration
PAGES_DIR="${SCRIPT_DIR}/site/pages"
LAYOUTS_DIR="${SCRIPT_DIR}/site/layouts"
PARTIALS_DIR="${SCRIPT_DIR}/site/partials"
DATA_FILE="${SCRIPT_DIR}/site/data.json"
OUTPUT_DIR="${SCRIPT_DIR}/site/dist"

echo "🏗️  Static Site Generator (powered by myst.sh)"
echo "================================================"
echo

# Create output directory
mkdir -p "$OUTPUT_DIR"

# Load global data
if [[ -f "$DATA_FILE" ]]; then
    log_info "Loading site data from $DATA_FILE"
    myst_load_json "$DATA_FILE"
fi

# Load environment variables
log_info "Loading environment variables"
myst_load_env "SITE_"

# Set build metadata
myst_set_var "build_date" "$(date '+%Y-%m-%d')"
myst_set_var "build_time" "$(date '+%H:%M:%S')"
myst_set_var "generator" "myst.sh static site generator"

# Load all partials
if [[ -d "$PARTIALS_DIR" ]]; then
    log_info "Loading partials from $PARTIALS_DIR"
    myst_load_partials_dir "$PARTIALS_DIR"
fi

# Load layout
if [[ -f "${LAYOUTS_DIR}/main.myst" ]]; then
    log_info "Loading main layout"
    MYST_LAYOUTS["main"]=$(cat "${LAYOUTS_DIR}/main.myst")
fi

# Process all pages
if [[ ! -d "$PAGES_DIR" ]]; then
    die "Pages directory not found: $PAGES_DIR"
fi

page_count=0

log_info "Processing pages..."
echo

for page_file in "$PAGES_DIR"/*.myst; do
    if [[ ! -f "$page_file" ]]; then
        continue
    fi
    
    page_name=$(basename "$page_file" .myst)
    output_file="${OUTPUT_DIR}/${page_name}.html"
    
    # Set page-specific variables
    myst_set_var "page_name" "$page_name"
    myst_set_var "page_url" "/${page_name}.html"
    
    # Load and render page
    page_content=$(cat "$page_file")
    rendered=$(myst_render "$page_content")
    
    # Save output
    echo "$rendered" > "$output_file"
    
    log_success "Generated: $output_file"
    page_count=$((page_count + 1))
done

echo
echo "================================================"
log_success "Build complete! Generated $page_count pages"
log_info "Output directory: $OUTPUT_DIR"
echo

# Generate index of all pages
log_info "Generating site index..."

index_content="<!DOCTYPE html>
<html>
<head>
  <title>Site Index</title>
</head>
<body>
  <h1>Generated Pages</h1>
  <ul>"

for html_file in "$OUTPUT_DIR"/*.html; do
    if [[ "$(basename "$html_file")" != "index.html" ]] && [[ -f "$html_file" ]]; then
        name=$(basename "$html_file" .html)
        index_content+="
    <li><a href='${name}.html'>$name</a></li>"
    fi
done

index_content+="
  </ul>
  <hr>
  <p><small>Generated by myst.sh on $(date)</small></p>
</body>
</html>"

echo "$index_content" > "${OUTPUT_DIR}/index.html"
log_success "Generated: ${OUTPUT_DIR}/index.html"

echo
echo "🎉 All done! Open ${OUTPUT_DIR}/index.html to view your site."
